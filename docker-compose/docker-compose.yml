version: "3.9"
services:
  birdspotter:
    restart: unless-stopped
    build:
      context: ../birdspotter
      dockerfile: ../docker/Dockerfile
      target: prod
    env_file: 
      - .env
    environment:
      - DBHOST=postgres
    depends_on: 
      postgres:
        condition: service_healthy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.birdspotter.rule=Host(`${DOMAIN}`)"
      - "traefik.http.routers.birdspotter.entrypoints=web"
    volumes:
      - media:/share/media
      - ../birdspotter/:/app
  traefik:
    image: traefik:latest
    ports:
      - 8001:80
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    command:
      - "--ping.entryPoint=ping"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entryPoints.ping.address=:8082"
    depends_on: 
      - birdspotter
    healthcheck:
      test: ["CMD", "traefik" ,"healthcheck"]
      interval: 30s
      timeout: 3s
      retries: 30
  postgres:
    restart: unless-stopped
    image: postgres:13
    env_file: 
      - .env
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./initdb.sql:/docker-entrypoint-initdb.d/initdb.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
  media:
    build: ../docker/nginx
    image: nginx_upload
    depends_on:
      - birdspotter
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - media:/share/media
    labels:
    - "traefik.enable=true"
    - "traefik.http.routers.media.rule=Host(`${DOMAIN}`) && PathPrefix(`/media`) || PathPrefix(`/upload`)"
    - "traefik.http.routers.media.entrypoints=web"
    - "traefik.http.routers.media.middlewares=media-stripprefix"
    - "traefik.http.middlewares.media-stripprefix.stripprefix.prefixes=/media"

################### supporting services for dev purposes #################################
#### mail dev server ####
  mail: 
    image: antespi/docker-imap-devel:latest

volumes:
  pgdata:
  media: